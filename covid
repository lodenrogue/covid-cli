#! /bin/bash

cumulative_report_type="cumul"
daily_report_type="daily";
all_option="all"

### US ###

function get_us {
	curl -s https://raw.githubusercontent.com/nytimes/covid-19-data/master/us.csv \
	| awk '{ print }'
}

function get_us_cases_cumulative {
	get_us | awk -F ',' '{ printf "%s,%s\n", $1, $2 }'
}

function get_us_cases_daily {
	get_us | awk -F ',' 'BEGIN { print "date,cases" }; NR > 1 { printf "%s,%s\n", $1, $2 - previous; previous = $2 }'
}

function get_us_deaths_cumulative {
	get_us | awk -F ',' '{ printf "%s,%s\n", $1, $3 }'
}

function get_us_deaths_daily {
	get_us | awk -F ',' 'BEGIN { print "date,deaths" }; NR > 1 { printf "%s,%s\n", $1, $3 - previous; previous = $3 }'
}

### State ###

function get_all_states {
	curl -s https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-states.csv \
	| awk '{ print }'
}

function get_single_state {
	echo "date,state,fips,cases,deaths"
	get_all_states | grep -i "$1"
}

function get_single_state_cases_cumulative {
	get_single_state "$1"| awk -F ',' '{ printf "%s,%s\n", $1, $4 }'
}

function get_single_state_cases_daily {
	get_single_state "$1"| awk -F ',' 'BEGIN { print "date,cases" } NR > 1 { printf "%s,%s\n", $1, $4 - previous; previous = $4 }'
}

function get_single_state_deaths_cumulative {
	get_single_state "$1" | awk -F ',' '{ printf "%s,%s\n", $1, $5 }'
}

function get_single_state_deaths_daily {
	get_single_state "$1" | awk -F ',' 'BEGIN { print "date,deaths" } NR > 1 { printf "%s,%s\n", $1, $5 - previous; previous = $5 }'
}

### County ###

function get_all_counties {
	curl -s https://raw.githubusercontent.com/nytimes/covid-19-data/master/us-counties.csv \
	| awk '{ print }'
}

function get_single_county {
	get_all_counties | awk -F ',' -v query="$1" 'tolower($2) == tolower(query)'
}

function get_single_county_cases_cumulative {
	get_single_county "$1"| awk -F ',' '{ printf "%s,%s\n", $1, $5 }'
}

function get_single_county_cases_daily {
	get_single_county "$1"| awk -F ',' '{ printf "%s,%s\n", $1, $5 - previous; previous = $5 }'
}

function get_single_county_deaths_cumulative {
	get_single_county "$1" | awk -F ',' '{ printf "%s,%s\n", $1, $6 }'
}

function get_single_county_deaths_daily {
	get_single_county "$1" | awk -F ',' '{ printf "%s,%s\n", $1, $6 - previous; previous = $6 }'
}

while getopts ":s:t:d:c:b" opt; do
	case $opt in
		s ) state_flag=true; state=$OPTARG;;
		t ) county_flag=true; county=$OPTARG;;
		d ) deaths=true; report_type=$OPTARG;;
		c ) cases=true; report_type=$OPTARG;;
		b ) debug=true;;
		* ) echo 'Unknown option or missing argument:' $OPTARG; exit 1;;
	esac
done

if [ $state_flag ]; then
	if [ "$state" == $all_option ]; then
		get_all_states

	elif [ $cases ] && [ $report_type == $cumulative_report_type ]; then
		get_single_state_cases_cumulative "$state"

	elif [ $cases ] && [ $report_type == $daily_report_type ]; then
		get_single_state_cases_daily "$state"

	elif [ $deaths ] && [ $report_type == $cumulative_report_type ]; then
		get_single_state_deaths_cumulative "$state"

	elif [ $deaths ] && [ $report_type = $daily_report_type ]; then
		get_single_state_deaths_daily "$state"

	else
		get_single_state "$state"
	fi

elif [ $county_flag ]; then
	if [ "$county" == $all_option ]; then
		get_all_counties

	elif [ $cases ] && [ $report_type == $cumulative_report_type ]; then
		get_single_county_cases_cumulative "$county"

	elif [ $cases ] && [ $report_type == $daily_report_type ]; then
		get_single_county_cases_daily "$county"

	elif [ $deaths ] && [ $report_type == $cumulative_report_type ]; then
		get_single_county_deaths_cumulative "$county"

	elif [ $deaths ] && [ $report_type = $daily_report_type ]; then
		get_single_county_deaths_daily "$county"

	else
		get_single_county "$county"
    fi

else
	if [ $cases ] && [ $report_type == $cumulative_report_type ]; then
		get_us_cases_cumulative

	elif [ $cases ] && [ $report_type == $daily_report_type ]; then
		get_us_cases_daily

	elif [ $deaths ] && [ $report_type == $cumulative_report_type ]; then
		get_us_deaths_cumulative

	elif [ $deaths ] && [ $report_type = $daily_report_type ]; then
		get_us_deaths_daily

	else
		get_us
	fi
fi
